% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GblYield.R
\name{GblYield}
\alias{GblYield}
\title{Compute global yield by step}
\usage{
GblYield(samples, filtres, pm.res, int.res)
}
\arguments{
\item{samples}{Data frame with relevant information to identify the samples of the sequencing experiment, including
\code{Patient.ID, MID, Primer.ID, Region, RefSeq.ID}, and \code{Pool.Nm} columns.}

\item{filtres}{The data frame returned by \code{\link{FiltbyQ30}} function.}

\item{pm.res}{The list returned by \code{\link{demultiplexPrimer}}, including \code{fileTable}
and \code{poolTable} data frames.}

\item{int.res}{The data frame returned by \code{\link{ConsHaplotypes}} function.}
}
\value{
After execution, two report files will be saved in the reports folder:
  \enumerate{
  \item{\code{GlobalYieldBarplots.pdf}: Includes some barplots representing the yield (in nÂº of
    reads and percentage) by each step of the quality assessment pipeline. This
    representation is done for all pools included in the analysis and also for global results.}
  \item{\code{GlobalYield-SumRprt.txt}: Summary report including global yield by analysis step in
    number of reads, in percentage by step and percentage referred to raw reads. }}
}
\description{
Generates global yield reports for each evaluated pool from previous results.
}
\note{
This function is designed to be applied at the end of the quality assessment analysis and requires
  the previous execution of \code{\link{FiltbyQ30}},  \code{\link{demultiplexPrimer}} and \code{\link{ConsHaplotypes}}
  and functions from the same package.
}
\examples{
## Execute FLASH extension
runDir <- "./run"
runfiles <- list.files(runDir,recursive=TRUE,full.names=TRUE,include.dirs=TRUE)
flash <- "./FLASH/flash.exe"
flashres <- R1R2toFLASH(runfiles,flash)

## Execute Q30 filtering
flashDir <- "./flash"
flashfiles <- list.files(flashDir,recursive=TRUE,full.names=TRUE,include.dirs=TRUE)
filtres <- FiltbyQ30(max.pct=0.05,flashfiles,flashres)

## Execute demultiplexing by MID with default parameters
flashFiltDir <- "./flashFilt"
flashffiles <- list.files(flashFiltDir,recursive=TRUE,full.names=TRUE,include.dirs=TRUE)
# Get data
samples <- read.table("./data/samples.csv", sep="\t", header=T,
                      colClasses="character",stringsAsFactors=F)
mids <- read.table("./data/mids.csv", sep="\t", header=T,
                   stringsAsFactors=F)
dem.res<-demultiplexMID(flashffiles,samples,mids)

## Execute demultiplexing by primer
splitDir <- "./splits"
splitfiles <- list.files(splitDir,recursive=TRUE,full.names=TRUE,include.dirs=TRUE)
pm.res <- demultiplexPrimer(splitfiles,samples,primers)

## Obtain consensus haplotypes (default parameters)
trimDir <- "./trim"
trimfiles <- list.files(trimDir,recursive=TRUE,full.names=TRUE,include.dirs=TRUE)
int.res <- ConsHaplotypes(trimfiles, pm.res, thr, min.seq.len)

## Apply function
GblYield(samples, filtres, pm.res, int.res)

}
\seealso{
\code{\link{FiltbyQ30}},  \code{\link{demultiplexPrimer}}, \code{\link{ConsHaplotypes}}
}
\author{
Alicia Aranda
}
